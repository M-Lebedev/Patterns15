#include "resource.h"

////////////////////////////////////////////////////////////////////////////////
/// \brief Конструктор по умолчанию
Resource::Resource()
{
	this->Res=0;
	this->MaxRes=0;
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Конструктор с параметрами
/// \param Res		текущее значение ресурса
/// \param MaxRes	максимальное значение ресурса
Resource::Resource(int Res, int MaxRes)
{
	this->Res=Res;
	this->MaxRes=MaxRes;
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Деструктор
Resource::~Resource ()
{
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Получить значение ресурса
/// \return Текущее значение ресурса
///
int Resource::getRes ()															// Получить знач. ресурса
{
	return Res;
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Получить максимальное значение ресурса
/// \return Максимальное значение ресурса
int Resource::getMaxRes ()														// Получить знач. предела ресурса
{
	return MaxRes;
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Функция установки количества ресурса
/// \param Res	новое значение для ресурса
void Resource::setRes (int Res)													// Изменение кол-ва текущего ресурса
{
	if(Res > getMaxRes ())														// ? Новое знач. > макс.
	{
		this->Res=this->MaxRes;													//		Устан. предельное знач.
	}
	else																		// ? Новое знач. < макс.
	{
		if(Res <= 0)															//		? Новое знач. отрицательное.
			this->Res=0;
		else
			this->Res=Res;
	}
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Функция установки предела кол-ва ресурса
/// \param MaxRes новый предел для количества ресурса
void Resource::setMaxRes (int MaxRes)
{
	this->MaxRes=MaxRes;
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Функция установки значений
/// \param Res		текущее значение ресурса
/// \param MaxRes	максимальное значение ресурса
void Resource::setInfoRes(int Res, int MaxRes)
{
	setMaxRes	(MaxRes);
	setRes		(Res);
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Метод забирания ресурсов
/// \param Res	забираемое количество ресурса
/// \return Забранное количество ресурса
int Resource::minusRes(int Res)
{
	if(getRes ()>=Res)
	{
		setRes (getRes ()-Res);

	}
	else
	{
		Res-=getRes ();
		setRes (0);

	}

	return Res;
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Метод добавления ресурсов
/// \param Res	добавляемый ресурс
/// \return Недобавленное количество ресурса
int Resource::plusRes (int Res)													// Добавление к общему кол-ву ресурсов
{
	if(!Res)
		return 0;

	if(limitForAdd()>= Res)														// Предел добавления >= добавляемому ресурсу
	{
		setRes (getRes ()+Res);													//		Добавляем кол-во ресурсов = Res
		Res = 0;																//		Передали весь ресурс
	}
	else																		// Предел добавления < добавляемого ресурса
	{
		setRes (getMaxRes ());													//		Заполняем до максимума
		Res -= limitForAdd();													//		Вычитаем то, что можно добавить
	}

	return Res;																	// Возвращаем излишки
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Возвращает значение оставшегося кол-ва ресурса до макс. знач.
/// \return Разница между максимальным и текущим значением ресурса
int Resource::limitForAdd ()
{
	return (getMaxRes ()- getRes ());
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Проверка на пустоту
/// \return true, если ресурс закончился, false, если еще есть некоторое кол-во ресурса
bool Resource::emptyRes()
{
	if(getRes () <=0 )
		return true;
	return false;
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Проверка на загруженность
/// \return true, если текущее значение = максимальному
bool Resource::isFull()
{
	if (getMaxRes ()-getRes ())
	{
		return false;
	}
	else
	{
		return true;
	}
}

////////////////////////////////////////////////////////////////////////////////
/// \brief Функция вывода информации о ресурсе
void Resource::toShowInfo ()													// Вывод информации о объекте в консоль
{
	Object::toShowInfo ();
	std::cout << "Value:		" << getRes ()		<<	std::endl;
	std::cout << "MaxValue:		" << getMaxRes ()	<<	std::endl;
}

